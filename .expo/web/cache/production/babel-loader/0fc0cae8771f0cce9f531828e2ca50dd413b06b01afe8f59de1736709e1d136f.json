{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import{NativeModule,registerWebModule,UnavailabilityError}from'expo-modules-core';var ExpoFontUtils=function(_NativeModule){function ExpoFontUtils(){_classCallCheck(this,ExpoFontUtils);return _callSuper(this,ExpoFontUtils,arguments);}_inherits(ExpoFontUtils,_NativeModule);return _createClass(ExpoFontUtils,[{key:\"renderToImageAsync\",value:function(){var _renderToImageAsync=_asyncToGenerator(function*(glyphs,options){throw new UnavailabilityError('expo-font','renderToImageAsync');});function renderToImageAsync(_x,_x2){return _renderToImageAsync.apply(this,arguments);}return renderToImageAsync;}()}]);}(NativeModule);export default registerWebModule(ExpoFontUtils,'ExpoFontUtils');","map":{"version":3,"names":["NativeModule","registerWebModule","UnavailabilityError","ExpoFontUtils","_NativeModule","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","_renderToImageAsync","_asyncToGenerator","glyphs","options","renderToImageAsync","_x","_x2","apply"],"sources":["C:\\Users\\sumanth\\Downloads\\app\\node_modules\\expo-font\\src\\ExpoFontUtils.web.ts"],"sourcesContent":["import { NativeModule, registerWebModule, UnavailabilityError } from 'expo-modules-core';\n\nimport { RenderToImageOptions } from './FontUtils.types';\n\nclass ExpoFontUtils extends NativeModule {\n  async renderToImageAsync(glyphs: string, options?: RenderToImageOptions): Promise<string> {\n    throw new UnavailabilityError('expo-font', 'renderToImageAsync');\n  }\n}\n\nexport default registerWebModule(ExpoFontUtils, 'ExpoFontUtils');\n"],"mappings":"+yBAAA,OAASA,YAAY,CAAEC,iBAAiB,CAAEC,mBAAmB,KAAQ,mBAAmB,CAAC,GAInF,CAAAC,aAAc,UAAAC,aAAA,WAAAD,cAAA,EAAAE,eAAA,MAAAF,aAAA,SAAAG,UAAA,MAAAH,aAAA,CAAAI,SAAA,GAAAC,SAAA,CAAAL,aAAA,CAAAC,aAAA,SAAAK,YAAA,CAAAN,aAAA,GAAAO,GAAA,sBAAAC,KAAA,gBAAAC,mBAAA,CAAAC,iBAAA,CAClB,UAAyBC,MAAc,CAAEC,OAA8B,EACrE,KAAM,IAAI,CAAAb,mBAAmB,CAAC,WAAW,CAAE,oBAAoB,CAAC,CAClE,CAAC,UAFK,CAAAc,kBAAkBA,CAAAC,EAAA,CAAAC,GAAA,SAAAN,mBAAA,CAAAO,KAAA,MAAAZ,SAAA,SAAlB,CAAAS,kBAAkB,UADEhB,YAAY,EAMxC,cAAe,CAAAC,iBAAiB,CAACE,aAAa,CAAE,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}