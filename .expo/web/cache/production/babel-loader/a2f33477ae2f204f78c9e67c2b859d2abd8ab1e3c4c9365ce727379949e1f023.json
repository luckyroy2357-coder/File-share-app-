{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import ExpoDocumentPicker from\"./ExpoDocumentPicker\";export function getDocumentAsync(){return _getDocumentAsync.apply(this,arguments);}function _getDocumentAsync(){_getDocumentAsync=_asyncToGenerator(function*(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref$type=_ref.type,type=_ref$type===void 0?'*/*':_ref$type,_ref$copyToCacheDirec=_ref.copyToCacheDirectory,copyToCacheDirectory=_ref$copyToCacheDirec===void 0?true:_ref$copyToCacheDirec,_ref$multiple=_ref.multiple,multiple=_ref$multiple===void 0?false:_ref$multiple;if(typeof type==='string'){type=[type];}return yield ExpoDocumentPicker.getDocumentAsync({type:type,copyToCacheDirectory:copyToCacheDirectory,multiple:multiple});});return _getDocumentAsync.apply(this,arguments);}","map":{"version":3,"names":["ExpoDocumentPicker","getDocumentAsync","_getDocumentAsync","apply","arguments","_asyncToGenerator","_ref","length","undefined","_ref$type","type","_ref$copyToCacheDirec","copyToCacheDirectory","_ref$multiple","multiple"],"sources":["C:\\Users\\sumanth\\Downloads\\app\\node_modules\\expo-document-picker\\src\\index.ts"],"sourcesContent":["import ExpoDocumentPicker from './ExpoDocumentPicker';\nimport { DocumentPickerOptions, DocumentResult } from './types';\nexport { DocumentPickerOptions, DocumentResult };\n\n// @needsAudit\n/**\n * Display the system UI for choosing a document. By default, the chosen file is copied to [the app's internal cache directory](filesystem.md#filesystemcachedirectory).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * > Therefore, calling `getDocumentAsync` in `componentDidMount`, for example, will **not** work as\n * > intended. The `cancel` event will not be returned in the browser due to platform restrictions and\n * > inconsistencies across browsers.\n *\n * @return On success returns a promise that fulfils with [`DocumentResult`](#documentresult) object.\n *\n * If the user cancelled the document picking, the promise resolves to `{ type: 'cancel' }`.\n */\nexport async function getDocumentAsync({\n  type = '*/*',\n  copyToCacheDirectory = true,\n  multiple = false,\n}: DocumentPickerOptions = {}): Promise<DocumentResult> {\n  if (typeof type === 'string') {\n    type = [type] as string[];\n  }\n  return await ExpoDocumentPicker.getDocumentAsync({ type, copyToCacheDirectory, multiple });\n}\n"],"mappings":"uEAAA,MAAO,CAAAA,kBAAkB,4BAgBzB,eAAsB,CAAAC,gBAAgBA,CAAA,SAAAC,iBAAA,CAAAC,KAAA,MAAAC,SAAA,GASrC,SAAAF,kBAAA,EAAAA,iBAAA,CAAAG,iBAAA,CATM,WAIsB,KAAAC,IAAA,CAAAF,SAAA,CAAAG,MAAA,IAAAH,SAAA,MAAAI,SAAA,CAAAJ,SAAA,IAAF,EAAE,CAAAK,SAAA,CAAAH,IAAA,CAH3BI,IAAI,CAAJA,IAAI,CAAAD,SAAA,UAAG,KAAK,CAAAA,SAAA,CAAAE,qBAAA,CAAAL,IAAA,CACZM,oBAAoB,CAApBA,oBAAoB,CAAAD,qBAAA,UAAG,IAAI,CAAAA,qBAAA,CAAAE,aAAA,CAAAP,IAAA,CAC3BQ,QAAQ,CAARA,QAAQ,CAAAD,aAAA,UAAG,KAAK,CAAAA,aAAA,CAEhB,GAAI,MAAO,CAAAH,IAAI,GAAK,QAAQ,CAAE,CAC5BA,IAAI,CAAG,CAACA,IAAI,CAAa,C,CAE3B,YAAa,CAAAV,kBAAkB,CAACC,gBAAgB,CAAC,CAAES,IAAI,CAAJA,IAAI,CAAEE,oBAAoB,CAApBA,oBAAoB,CAAEE,QAAQ,CAARA,QAAQ,CAAE,CAAC,CAC5F,CAAC,SAAAZ,iBAAA,CAAAC,KAAA,MAAAC,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}