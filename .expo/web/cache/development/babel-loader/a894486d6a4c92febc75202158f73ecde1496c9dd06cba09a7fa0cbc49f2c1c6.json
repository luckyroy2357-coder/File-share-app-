{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, TextInput, Button } from 'react-native-paper';\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ProfileScreen() {\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    changePassword = _useContext.changePassword;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    oldP = _useState2[0],\n    setOldP = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newP = _useState4[0],\n    setNewP = _useState4[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"Roll No: \", user == null ? void 0 : user.rollNo]\n    }), _jsxs(Text, {\n      children: [\"Name: \", user == null ? void 0 : user.name]\n    }), _jsx(Text, {\n      style: {\n        marginTop: 12,\n        marginBottom: 6\n      },\n      children: \"Change Password\"\n    }), _jsx(TextInput, {\n      label: \"Old Password\",\n      value: oldP,\n      onChangeText: setOldP,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      label: \"New Password\",\n      value: newP,\n      onChangeText: setNewP,\n      secureTextEntry: true,\n      style: {\n        marginTop: 8\n      }\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return changePassword(oldP, newP);\n      },\n      style: {\n        marginTop: 12\n      },\n      children: \"Change Password\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  }\n});","map":{"version":3,"names":["React","useContext","useState","View","StyleSheet","Text","TextInput","Button","AuthContext","jsxs","_jsxs","jsx","_jsx","ProfileScreen","_useContext","user","changePassword","_useState","_useState2","_slicedToArray","oldP","setOldP","_useState3","_useState4","newP","setNewP","style","styles","container","children","rollNo","name","marginTop","marginBottom","label","value","onChangeText","secureTextEntry","mode","onPress","create","flex","padding"],"sources":["C:/Users/sumanth/Downloads/app/src/screens/ProfileScreen.tsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { Text, TextInput, Button } from 'react-native-paper';\r\nimport { AuthContext } from '../auth/AuthContext';\r\n\r\nexport default function ProfileScreen() {\r\n  const { user, changePassword } = useContext(AuthContext);\r\n  const [oldP, setOldP] = useState('');\r\n  const [newP, setNewP] = useState('');\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Roll No: {user?.rollNo}</Text>\r\n      <Text>Name: {user?.name}</Text>\r\n\r\n      <Text style={{ marginTop: 12, marginBottom: 6 }}>Change Password</Text>\r\n      <TextInput label=\"Old Password\" value={oldP} onChangeText={setOldP} secureTextEntry />\r\n      <TextInput label=\"New Password\" value={newP} onChangeText={setNewP} secureTextEntry style={{ marginTop: 8 }} />\r\n      <Button mode=\"contained\" onPress={() => changePassword(oldP, newP)} style={{ marginTop: 12 }}>\r\n        Change Password\r\n      </Button>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({ container: { flex: 1, padding: 16 } });\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEpD,SAASC,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAQ,oBAAoB;AAC5D,SAASC,WAAW;AAA8B,SAAAC,IAAA,IAAAC,KAAA,EAAAC,GAAA,IAAAC,IAAA;AAElD,eAAe,SAASC,aAAaA,CAAA,EAAG;EACtC,IAAAC,WAAA,GAAiCb,UAAU,CAACO,WAAW,CAAC;IAAhDO,IAAI,GAAAD,WAAA,CAAJC,IAAI;IAAEC,cAAc,GAAAF,WAAA,CAAdE,cAAc;EAC5B,IAAAC,SAAA,GAAwBf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAAwBpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAEpB,OACEb,KAAA,CAACP,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BnB,KAAA,CAACL,IAAI;MAAAwB,QAAA,GAAC,WAAS,EAACd,IAAI,oBAAJA,IAAI,CAAEe,MAAM;IAAA,CAAO,CAAC,EACpCpB,KAAA,CAACL,IAAI;MAAAwB,QAAA,GAAC,QAAM,EAACd,IAAI,oBAAJA,IAAI,CAAEgB,IAAI;IAAA,CAAO,CAAC,EAE/BnB,IAAA,CAACP,IAAI;MAACqB,KAAK,EAAE;QAAEM,SAAS,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAJ,QAAA,EAAC;IAAe,CAAM,CAAC,EACvEjB,IAAA,CAACN,SAAS;MAAC4B,KAAK,EAAC,cAAc;MAACC,KAAK,EAAEf,IAAK;MAACgB,YAAY,EAAEf,OAAQ;MAACgB,eAAe;IAAA,CAAE,CAAC,EACtFzB,IAAA,CAACN,SAAS;MAAC4B,KAAK,EAAC,cAAc;MAACC,KAAK,EAAEX,IAAK;MAACY,YAAY,EAAEX,OAAQ;MAACY,eAAe;MAACX,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAE;IAAE,CAAE,CAAC,EAC/GpB,IAAA,CAACL,MAAM;MAAC+B,IAAI,EAAC,WAAW;MAACC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQvB,cAAc,CAACI,IAAI,EAAEI,IAAI,CAAC;MAAA,CAAC;MAACE,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAG,CAAE;MAAAH,QAAA,EAAC;IAE9F,CAAQ,CAAC;EAAA,CACL,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGvB,UAAU,CAACoC,MAAM,CAAC;EAAEZ,SAAS,EAAE;IAAEa,IAAI,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAG;AAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}